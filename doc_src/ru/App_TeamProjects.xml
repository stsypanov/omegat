<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<appendix id="appendix.TeamProjects">
  <title>Командные проекты в ОмегаТ<indexterm class="singular">
      <primary>ОмегаТ</primary> <secondary>Командные проекты</secondary> <seealso>Командные проекты</seealso>
    </indexterm></title>

  <section>
    <title>Управление версиями — введение</title>

    <para>В ОмегаТ функция совместной работы над переводом реализована на основе систем управления версиями (version control system, VCS), которые широко применяются при разработке программного обеспечения для управления изменениями в коде программ и беспрепятственной совместной работы в рамках команды. ОмегаТ поддерживает две популярные системы управления версиями: <ulink url="http://subversion.apache.org">Apache Subversion</ulink> (иногда называемую SVN) и <ulink url="http://git-scm.com/">Git</ulink>. Для команды разработчиков использование систем управления версиями имеет следующие преимущества:</para>

    <itemizedlist>
      <listitem>
        <para>несколько членов команды могут одновременно работать над одним проектом и при этом не мешать друг другу;</para>
      </listitem>

      <listitem>
        <para>они могут использовать общую память переводов и общий глоссарий;</para>
      </listitem>

      <listitem>
        <para>По умолчанию каждые три минуты всем членам команды становится доступна обновлённая версия перевода;</para>
      </listitem>

      <listitem>
        <para>система автоматически управляет версиями общих файлов;</para>
      </listitem>

      <listitem>
        <para>конфликты, например, различные варианты перевода одного сегмента или термина глоссария, можно отслеживать и разрешать;</para>
      </listitem>
    </itemizedlist>

    <para>Для начала дадим определение некоторым терминам:</para>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">сервер системы управления версиями:</emphasis> сервер SVN или Git, на котором хранятся материалы проекта. Сервер может находиться и в локальной сети, но в большинстве случаев он будет доступен в Интернете, т. е. будет иметь URL-адрес. Один из членов команды, администратор проекта, должен уметь настраивать всё необходимое на стороне сервера: подготавливать систему управления версиями, импортировать проекты ОмегаТ, устанавливать необходимые права для членов команды, разрешать конфликты и т. д.;</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">клиент системы управления версиями:</emphasis> для доступа к серверу, на компьютере руководителя проекта должна быть установлена клиентская программа SVN или Git. Для ОС Windows имеются популярные клиенты <ulink url="http://tortoisesvn.net/">TortoiseSVN</ulink> и <ulink url="http://code.google.com/p/tortoisegit/">TortoiseGit</ulink>. Схожие программы доступны и для других операционных систем (GNU/Linux, OS X);</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">репозиторий:</emphasis> место, где хранятся общие файлы проекта, либо в локальной сети, либо в Интернете. Члены команды подключаются к нему через клиентские программы системы управления версиями;</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">создание рабочей копии (извлечение документов из репозитория):</emphasis> операция, в результате которой на вашем компьютере появляется рабочая копия файлов, хранящихся в репозитории. Информация о создании рабочих копий хранится на сервере, благодаря чему последующая фиксация изменений (см. ниже) может производиться обычным образом;</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold"> фиксация изменений (создание новой версии):</emphasis> после того, как в рабочую копию файлов были внесены изменения, их можно отправить обратно в репозиторий (зафиксировать изменения) так, чтобы они стали доступны остальным членам команды. На стороне сервера проводится проверка, чтобы возможные конфликты, которые возникают, когда два участника команды переводят один и тот же сегмент, были разрешены;</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">администратор:</emphasis> член команды, ответственный за создание и поддержание рабочего репозитория, т. е. за обеспечение работы сервера. Чтобы избежать проблем, по крайней мере на начальном этапе, подобными правами должен обладать только один человек;</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">пользователь</emphasis>: член команды, работающий над общим проектом.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Совместная работа над проектом, с использованием SVN<indexterm class="singular">
        <primary>Командные проекты</primary> <secondary>Subversion</secondary>
      </indexterm></title>

    <para>Для работы с системой SVN можно либо установить её на ваш собственный сервер, либо воспользоваться услугами стороннего хостинга. При использовании стороннего сервиса следует учитывать возможность утечки конфиденциальной информации, так как вы будете загружать переводимые документы на сервер, который вы не можете контролировать. С другой стороны, этого можно избежать, создав свой собственный SVN-сервер, например, если у вас уже установлен сервер Apache и другие необходимые программы (например, VisualSVN).</para>

    <para>После того, как вопрос в выбором сервера будет решён, руководитель проекта должен установить SVN-клиент на свой компьютер. Пользователям ОС Windows рекомендуется воспользоваться <ulink url="http://tortoisesvn.net/">TortoiseSVN</ulink>. Пользователи Mac могут загрузить SVN-клиент с веб-сайта <ulink url="https://sourceforge.net/projects/macsvn/">SourceForge</ulink>. Для пользователей GNU/Linux доступно руководство <ulink url="http://www.yolinux.com/TUTORIALS/Subversion.html">«Команды и скрипты Subversion» (на английском языке)</ulink>.</para>

    <section>
      <title>Создание репозитория<indexterm class="singular">
          <primary>Командные проекты</primary> <secondary>Создание репозитория SVN</secondary>
        </indexterm></title>

      <para>В данном руководстве описывается использование бесплатного (для команды из двух человек) SVN-сервера <ulink url="http://projectlocker.com/">ProjectLocker</ulink>. Заметьте, что создатель репозитория по умолчанию имеет права администратора. Для начала зарегистрируйтесь на сайте и запомните выбранное имя пользователя и пароль для будущих проектов.</para>

      <orderedlist>
        <listitem>
          <para>Создайте новый проект на ProjectLocker.</para>
        </listitem>

        <listitem>
          <para>Введите название и описание репозитория. (в нашем примере это <literal>«OmegaT»</literal> и <literal>«OmegaT SL Localization»</literal>).</para>
        </listitem>

        <listitem>
          <para>Выберите <guibutton>SVN.</guibutton></para>
        </listitem>

        <listitem>
          <para>Нажмите <guibutton>«Create Project» (создать проект).</guibutton></para>
        </listitem>
      </orderedlist>

      <para>Перейдите к разделу <emphasis role="bold">«Projects» (проекты)</emphasis> вашей учётной записи. В описании проекта («Project Services») будет указан URL-адрес, по которому SVN-клиенты могут подключиться к вашему новому SVN-серверу. Также здесь можно добавлять новых членов команды и устанавливать им права. Заметьте, что для этого члены команды тоже должны быть зарегистрированы (в бесплатной версии ProjectLocker команда может состоять только из двух человек).</para>

      <para>Проектами можно управлять в соответствии с вашим стилем работы и потребностями. Как и в случае с обычными проектами ОмегаТ, для переводов с разными языковыми парами следует создавать разные проекты. Однако и в рамках одной языковой пары лучше размещать переводы по разным тематикам или от разных клиентов в отдельных проектах. С другой стороны, в одном репозитории можно иметь подкаталоги <literal>Проект1</literal>, <literal>Проект2</literal> и т. д., при этом проекты будут иметь общие каталоги <literal>tm</literal>, <literal>glossary</literal>и <literal>dictionary</literal>.</para>

      <para>Например, в этом примере для простоты создаётся один репозиторий для одного проекта ОмегаТ.</para>
    </section>

    <section>
      <title>Импорт проекта в SVN-репозиторий, Windows</title>

      <para>Изначально репозиторий создаётся пустым. Сначала вы должны создать пустой каталог SVN-клиента. Создайте на своём компьютере пустой каталог, в котором будет находиться ваш проект и щёлкните по нему правой кнопкой мыши. Выберите <guilabel>TortoiseSVN &gt; Checkout</guilabel> (TortoiseSVN &gt; Создание рабочей копии). Появится диалоговое окно, как на иллюстрации ниже.</para>
 
      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/Team_projects_checkout.png"/>
        </imageobject>
		<imageobject role="fo">
          <imagedata fileref="images/Team_projects_checkout.png" width="80%"/>
        </imageobject>
      </mediaobject>
 
      <para>В поле <emphasis role="bold">URL of repository</emphasis> (URL-адрес репозитория) введите адрес, полученный от ProjectLocker. Убедитесь, что в поле <emphasis role="bold">Checkout directory</emphasis> (каталог рабочей копии) указан только что созданный пустой каталог и нажмите <emphasis role="bold">OK</emphasis>. После завершения работы клиента вы можете убедиться, что в новом каталоге теперь содержится подкаталог «.svn», а на иконке появился небольшой зелёный символ «OK», обозначающий, что содержимое каталога синхронизировано с репозиторием.</para>

      <para>Далее следует добавить в этот каталог файлы проекта ОмегаТ. Следующие файлы должным быть доступны всем членам проекта:</para>

      <itemizedlist>
        <listitem>
          <para>основной файл проекта <filename>omegat.project</filename>;</para>
        </listitem>

        <listitem>
          <para>файл памяти переводов проекта <filename>omegat\project_save.tmx</filename>;</para>
        </listitem>

        <listitem>
          <para>содержимое каталога исходных файлов;</para>
        </listitem>

        <listitem>
          <para>файл со специальными настройками файловых фильтров <filename>omegat\filters.xml</filename>.</para>
        </listitem>
      </itemizedlist>

      <para>Также администратор проекта может добавить каталоги <filename>tm</filename>, <filename>glossary</filename> и <filename>dictionary</filename>. Возможно, стоит добавить и файлы <filename>ignored_words.txt</filename> и <filename>learned_words.txt</filename> из каталога <filename>omegat</filename>. Не стоит добавлять файлы с расширением <filename>bak</filename>, файл <filename>project_stats.txt</filename> и <filename>project_stats_match.txt</filename> из каталога <filename>omegat</filename>, так как они будут лишь занимать место на сервере. Скорее всего, то же самое относится и к содержимому каталога <filename>target</filename>.</para>

      <para>После того, как вы скопируете все необходимые файлы в каталог с рабочей копией репозитория, зелёный символ «ОК» сменится на красный восклицательный знак, что означает, что в рабочей копии произошли изменения, которые не были зафиксированы в репозитории. Чтобы теперь обновить содержимое репозитория, следует сделать следующее:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">добавить скопированные файлы в рабочую копию репозитория:</emphasis> щёлкните правой кнопкой мыши по каталогу рабочей копии и выберите <guilabel>TortoiseSVN &gt; Add</guilabel> (TortoiseSVN &gt; Добавить). В появившемся диалоговом окне оставьте настройки по умолчанию и нажмите <guilabel>OK</guilabel>. Появится окно «Add finished!» (добавление завершено!), как на иллюстрации ниже:</para>
 
      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/Team_projects_Add.png"/>
        </imageobject>
		<imageobject role="fo">
          <imagedata fileref="images/Team_projects_Add.png" width="80%"/>
        </imageobject>
      </mediaobject>
	  
          <para>Теперь содержимое каталога рабочей копии должно иметь соответствующие пометки:</para>

          <mediaobject>
            <imageobject role="html">
              <imagedata fileref="images/Team_projects_checkoutAddFolder.png"/>
            </imageobject>
			<imageobject role="fo">
              <imagedata fileref="images/Team_projects_checkoutAddFolder.png" width="80%"/>
            </imageobject>
          </mediaobject>

        </listitem>
        <listitem>
          <para><emphasis role="bold">зафиксировать изменения в репозитории:</emphasis> щёлкните правой кнопкой мыши по каталогу рабочей копии и выберите <guilabel>SVN Commit…</guilabel>(зафиксировать изменения…). Откроется новое диалоговое окно. Отметьте нужные изменения, т. е., скопированные каталоги и файлы.</para>
 
          <mediaobject>
            <imageobject role="html">
              <imagedata fileref="images/Team_projects_initialCommit.png"/>
            </imageobject>
	          <imageobject role="fo">
              <imagedata fileref="images/Team_projects_initialCommit.png" width="80%"/>
            </imageobject>
          </mediaobject>

          <para>Добавьте описание изменений в поле «Message» (сообщение) и нажмите <guilabel>OK</guilabel>. Появится новое окно, в котором будет отображаться прогресс фиксации изменений. Сначала содержимое рабочей копии будет отправлено на сервер, а затем будет произведена синхронизация каталога «.svn» с текущим состоянием репозитория;</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">обновить файлы рабочей копии из локальной копии репозитория:</emphasis> сейчас, в подкаталоге «.svn» находится локальная копия репозитория, но файлы рабочей копии проекта пока не синхронизированы. Чтобы обновить рабочую копию, щёлкните правой кнопкой мыши по главному каталогу проекта и выберите <guilabel>SVN Update</guilabel> (обновить из SVN). Проверьте содержимое каталога, чтобы убедиться, что локальная копия репозитория и соответствующие файлы и подкаталоги соответствуют последним версиям на сервере:</para>

          <mediaobject>
            <imageobject role="html">
              <imagedata fileref="images/Team_projects_checkoutSVNupdate.png"/>
            </imageobject>
	          <imageobject role="fo">
              <imagedata fileref="images/Team_projects_checkoutSVNupdate.png" width="80%"/>
            </imageobject>
          </mediaobject>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section>
  <title>Работа над командным проектом в ОмегаТ</title>
  <para>После размещения проекта на сервере члены команда должны лишь настроить <application>ОмегаТ</application> для доступа к общему проекту. Сначала нужно выбрать пункт меню <guilabel>Проект &gt; Загрузить командный проект…</guilabel>: ОмегаТ извлечёт из репозитория последнюю версию проекта и сохранит её в локальном каталоге. Учётные данные сохраняются автоматически, так что вводить их второй раз не придётся. Если вы используете GNU/Linux и <application>ОмегаТ</application> по прежнему каждый раз запрашивает учётные данные, попробуйте установить флажок <guilabel>«Принудительно сохранять пароль в виде обычного текста»</guilabel>.</para>
  <para>При последующем использовании будет достаточно просто открыть этот проект. ОмегаТ распознает его как командный и будет синхронизировать нужные файлы автоматически. По умолчанию синхронизация будет происходить каждые три минуты.</para>
  </section>
</appendix>
