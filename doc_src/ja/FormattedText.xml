<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<chapter id="chapter.formatted.text">
  <title>整形されたテキストを扱う<indexterm class="singular">
      <primary>訳文ファイル</primary> <secondary>整形されたテキスト</secondary>
    </indexterm><indexterm class="singular">
      <primary>原文ファイル</primary> <secondary>整形されたテキスト</secondary>
    </indexterm></title>

  <para>通常、原文ファイルにある整形情報は、訳文ファイルにも同じく必要になります。対応しているフォーマット（具体的には DocBook、HTML、XHTML、Open Document Format（ODF）、Office Open XML（MS Office 2007 以降））のテキスト中にある整形情報は OmegaT のなかでタグとして表示されます。参考訳文を探すため異なる文字列間の類似度を調べる場合、通常、タグは考慮されません。翻訳した分節にあるタグは訳文ファイルにも含まれます。</para>

  <section id="formatting.tags">
    <title>整形タグ<indexterm class="singular">
        <primary>タグ</primary>
      </indexterm></title>

    <para><indexterm class="singular">
        <primary>タグ</primary> <secondary>名前</secondary>
      </indexterm><emphasis role="bold">タグの名前：</emphasis></para>

    <para>タグ名は１から３文字の文字と数字からなります。タグにはショートカット文字が割り当てられますが、異なるタグが同じショートカット文字を共有する場合もあります。しかしタグの種類に応じて異なる数字が割り振られるため、区別できるようになっています。ショートカット文字は、できるだけタグの意味を反映するように選ばれます（たとえば太字の Bold には b、斜体の Italics には i など）。</para>

    <para><indexterm class="singular">
        <primary>タグ</primary> <secondary>番号付け</secondary>
      </indexterm><emphasis role="bold">タグの番号付け</emphasis></para>

    <para>タグに付けられる数字は、タググループごとに増えていきます。ここで言う「タググループ」とは、単一タグ（&lt;i0&gt; と &lt;/i0&gt; のような）を指します。分節のなかで最初のグループ（ペアもしくは単一）が数字 0 となり、次が 1 となります。以下に示す最初の例には、３つのタググループ（ペア、単一、そしてまた別のペア）があります。２つめの例にあるのは、１つのグループ（ペア）だけです。</para>

    <para><indexterm class="singular">
        <primary>タグ</primary> <secondary>単一とペア</secondary>
      </indexterm><emphasis role="bold">単一とペア：</emphasis></para>

    <para>タグは常に単一であるか、ペアになっています。単一タグは、タグの周囲にあるテキストには影響しない整形情報を示します（たとえば、追加の空白や改行などです）。</para>

    <para><literal>&lt;b0&gt;&lt;Ctr+N&gt;&lt;/b0&gt;, &lt;br1&gt;&lt;b2&gt;&lt;Enter&gt;&lt;/b2&gt;&lt;分節 2132&gt;</literal></para>

    <para>&lt;br1&gt;が単一タグで、周囲のテキストにはまったく影響しません。通常、ペアになったタグは、開きタグと閉じタグの間に挟まれた文字列に適用される整形情報を示しています。下の例の &lt;b0&gt; と &lt;/b0&gt; がペアになっており、テキスト「log.txt」に作用しています。開きタグは必ず、対応する閉じタグの前に現れる点に、注意してください。</para>

    <para><literal>稼動監視ログファイル（&lt;b0&gt;log.txt&lt;/b0&gt;）とエラー。&lt;分節 3167&gt;</literal></para>

    <para><application>OmegaT</application> では、文の分節化が行われる前にタグを作成します。そのため、分節化規則によってはペアのタグが、連続する２つの分節にまたがって分かれることがあります。これは必ずしもタグの破損を意味しませんが、タグ検証機能は大事を取って、分節を両方ともエラーとして報告します。</para>
  </section>

  <section id="tag.operations">
    <title>タグ操作<indexterm class="singular">
        <primary>タグ</primary> <secondary>操作</secondary>
      </indexterm></title>

    <para>タグを操作する場合には細心の注意が必要です。もし誤って変更してしまうと、最終的なファイルの整形が壊れてしまうかもしれません。基本原則は「タグが連続する場合は、その順番を崩さない」です。しかし、ある一定のルールを遵守すれば、この基本原則を曲げることも可能です。</para>

    <para><emphasis role="bold"><indexterm class="singular">
        <primary>タグ</primary> <secondary>複製</secondary>
      </indexterm>タグの複製：</emphasis></para>

    <para>タググループを複製するには、単に好きな場所にコピーするだけです。タグがペアになっているタググループでは、開きタグは閉じタグの前になければならないということを忘れないでください。グループを複製した箇所は、元と同じように整形されます。</para>

    <para>例：</para>

    <para><literal>&lt;b0&gt;この書式&lt;/b0&gt;を、こちらにも適用しましょう。&lt;分節 0001&gt;</literal></para>

    <para>複製後：</para>

    <para><literal>&lt;b0&gt;この書式&lt;/b0&gt;を、&lt;b0&gt;こちらにも適用&lt;/b0&gt;しました。&lt;分節 0001&gt;</literal></para>

    <para><emphasis role="bold"><indexterm class="singular">
        <primary>タグ</primary> <secondary>グループの削除</secondary>
      </indexterm>タググループの削除：</emphasis></para>

    <para>タググループを削除するには、分節から取り除けばいいだけです。ペアになっているタググループでは、整形情報を適切に削除するため、開きタグと閉じタグの両方を削除しなければならないことに注意してください。さもなければ訳文ファイルが壊れてしまう可能性があります。タググループを削除することで、関連する整形情報が訳文ファイルから削除されます。</para>

    <para>例：</para>

    <para><literal>&lt;b0&gt;この書式&lt;/b0&gt;を削除します。&lt;分節 0001&gt;</literal></para>

    <para>削除後：</para>

    <para><literal>この書式を削除しました。&lt;分節 0001&gt;</literal></para>
  </section>

  <section id="tag.group.nesting">
    <title>タググループの入れ子<indexterm class="singular">
        <primary>タグ</primary> <secondary>グループの入れ子</secondary>
      </indexterm></title>

    <para>タググループの順序を変更することで、タググループが他のタググループのなかに入れ子になることがあります。この場合、外側のタググループが内側のタググループを完全に囲む限り、問題ありません。言いかえると、ペアになったタグを動かす場合、開きタグと閉じタグの両方が他のタググループのなかに収まるか、あるいは外に出ていればよいのです。そうでない場合は、翻訳ファイルが壊れてしまい、開かなくなる危険性もあります。</para>

    <para>例：</para>

    <para><literal>&lt;b0&gt;書式設定&lt;/b0&gt;&lt;b1&gt;１番&lt;/b1&gt;を、書式設定０番の入れ子にしましょう。&lt;分節 0001&gt;</literal></para>

    <para>入れ子になった後：</para>

    <para><literal>&lt;b0&gt;書式設定&lt;b1&gt;１番&lt;/b1&gt;&lt;/b0&gt;は、書式設定０番の入れ子になりました。&lt;分節 0001&gt;</literal></para>
  </section>

  <section id="tag.group.overlapping">
    <title>タググループの重なり<indexterm class="singular">
        <primary>タグ</primary> <secondary>グループの重なり</secondary>
      </indexterm></title>

    <para>誤った操作の結果、複数のタグペアで囲まれた箇所が（入れ子ではなく）一部重なってしまうと確実に翻訳ファイルの整形が壊れてしまい、場合によっては翻訳ファイルがまったく開かなります。</para>

    <para>例：</para>

    <para><literal>&lt;b0&gt;書式設定&lt;/b0&gt;&lt;b1&gt;１番&lt;/b1&gt;は、大変なことになります！&lt;分節 0001&gt;</literal></para>

    <para>誤った操作後：</para>

    <para><literal>&lt;b0&gt;書式設定&lt;b1&gt;１番&lt;/b0&gt;&lt;/b1&gt;は、大変なことになりました！&lt;分節 0001&gt;</literal></para>
  </section>

  <section>
    <title>タグ検証の設定</title>

    <para>タグの取り扱いをカスタマイズするには、メニューの<guimenuitem>［設定］→［タグ検証...］</guimenuitem>を選んでください。表示されるダイアログ上で、いくつかの規則を設定できます。</para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="images/OptionsTagValidation_25.png"/>
      </imageobject>
    </mediaobject>

    <para>そこでカスタマイズした設定は、すべての原文ファイルに適用されます。整形されたテキストのような、一部のファイル形式にだけ適用されるわけではありません。</para>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">printf 変数 - 確認しない、単純なものだけ確認、すべて確認</emphasis></para>

        <para>OmegaT は、プログラミング言語で使用される（たとえば %s のような）変数（書式化文字列）も検出できます。検出レベルは、何も確認しない、単純な printf 変数（%s, %d など）を確認、すべての変数を確認、の３つから選択できます。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">Java の簡単な MessageFormat 構図を確認する</emphasis></para>

        <para>このチェックボックスにチェックを入れると、OmegaT は単純な Java の MessageFormat タグ（{0} など）を認識するようになります。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">独自タグの正規表現</emphasis></para>

        <para>独自にタグとして認識させたい文字列の正規表現を、ここに入力します。タグ検証機能は、独自タグについても、OmegaT のタグと同じように、個数と順番が変わっていないか確認します。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">翻訳から削除すべき文字列の正規表現</emphasis></para>

        <para>訳文ファイルに含めたくない文字列を、正規表現で入力します。その文字列が訳文分節に存在した場合は、気づきやすいように該当箇所が赤字で表示されます。参考訳文の検索時には、削除すべき文字列は無視されます。もし削除文字列を含む参考訳文と含まない参考訳文とがあった場合は、削除文字列を含む参考訳文に対して５％の固定ペナルティが与えられます。このような場合に、削除した文字列を含む参考訳文の類似度が１００％になることは、ありません。</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="tag.group.validation">
    <title>タググループの検証<indexterm class="singular">
        <primary>タグ</primary> <secondary>グループの検証</secondary>
      </indexterm></title>

    <para>タグ検証機能は、（故意か過失かによらず）変更されたタグを検知し、影響のある分節を表示します。<guimenuitem>Ctrl+Shift+V<indexterm class="singular">
        <primary>ショートカット</primary> <secondary>タグ検証 - Ctrl+T</secondary>
      </indexterm></guimenuitem> でこの機能を使用できます。専用のウィンドウには、壊れたもしくは誤ったと思しきタグを含む分節がすべて表示されます。タグ検証機能により、タグの修正と翻訳文書の再生成が簡単になります。<guimenuitem>Ctrl+Shift+V</guimenuitem> により表示されるウインドウには３列の表があります。それぞれ分節へのリンク、原文の分節、訳文の分節です。</para>

    <figure id="tag.validation">
      <title>タグ検証項目</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/TagValidation.png"/>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="images/TagValidation.png" width="90%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>原文と訳文で比較しやすいよう、タグは青い太字で強調表示されます。分節番号をクリックすると、編集ウィンドウにその分節を表示できます。必要に応じて訳文を修正（上の例でいえばタグ &lt;i2&gt;&lt;/i2&gt; ペアの欠落）します。<guimenuitem>Ctrl+Shift+V</guimenuitem> を押すと、他のエラーを修正するためにタグ検証ウィンドウに戻ることができます。タグエラーは、訳文分節にある一連のタグの順序や個数が、原文の分節のそれと一致しない場合に発生します。タグ操作には、必要なもの、行っても問題ないものもありますが、中には翻訳後の文書を作成した際に問題となるものもあります。</para>
  </section>

  <section id="hints.for.tag.management">
    <title>タグ管理についてのヒント<indexterm class="singular">
        <primary>タグ</primary> <secondary>ヒント</secondary>
      </indexterm></title>

    <para><emphasis role="bold">原文テキストを単純にする</emphasis></para>

    <para>タグがあるということは、多くの場合、ある種のフォーマット・整形がそこで行われているということを表します。原文の整形を単純にしておくと、タグは減ります。もし可能であれば、文書中で使用する字体の種類、大きさ、色などをなるべく統一しておくと、翻訳作業を単純化でき、タグ関連のエラーを減らすことができます。タグに対してどういった操作が可能か、タグ操作のセクションを見てください。もし、タグの取り扱いが面倒な場合や整形が翻訳内容にそれほど影響しないときは、訳文にタグを付けないことが、もっとも簡単な解決策になりうることを忘れないでください。</para>

    <para><emphasis role="bold">ペアになったタグに特に注意する</emphasis></para>

    <para>原文のタグを確認する必要はあるが、翻訳後の文書に整形情報を含む必要があまりないのであれば、訳文にタグを入れる必要はありません。この場合、ペアになっているタグには特に注意を払ってください。片方のタグだけ削除してしまうと文書の整形情報が壊れてしまうからです。タグはテキストの中に含まれているので、分節化規則を使ってタグの少ない分節を生成することが可能です。これは比較的高度な機能であり、うまく使いこなすにはあるていどの経験が必要です。</para>

    <para>OmegaT は今のところ、整形に関する誤りをすべて自動で見つけだすことはできません。また、それが間違いなのか、訳文言語にあうよう意図的に整形情報を改善したものなのか、区別することもできないでしょう。したがって、タグのエラーが見過ごされた時には、生成した訳文ファイルが何かおかしかったり、最悪の場合は、ファイルを開くことができなくなるおそれもあります。</para>
  </section>
</chapter>