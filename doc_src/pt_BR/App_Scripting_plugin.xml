<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<appendix id="appendix.ScriptingPlugin.inOmegaT">
  <title>Plugin de scripts<indexterm class="singular">
      <primary>Plugins</primary> <secondary>Scripts</secondary>
    </indexterm></title>

  <section>
    <title>Introdução</title>

    <para>O OmegaT permite executar scripts em várias linguagens diferentes.</para>
  </section>

  <section>
    <title>Instalação e uso</title>

    <para>O plugin de scripts do OmegaT pode ser baixado no <ulink url="http://sourceforge.net/projects/omegat-plugins/files">site de downloads do OmegaT</ulink>. Descompacte os arquivos e coloque-os na pasta &quot;plugins&quot;, localizada na pasta de instalação do OmegaT, que é a pasta que contém o OmegaT.jar. Se a pasta &quot;plugins&quot; não existir, crie-a primeiro.</para>

    <para>Isto acrescenta um novo submenu <guisubmenu> Ferramentas &gt; </guisubmenu><guisubmenu> Scripts.</guisubmenu> Abaixo do submenu <guisubmenu>Scripts</guisubmenu>, há 12 submenus disponíveis para scripts. Ao clicar em <guisubmenu>Scripts</guisubmenu> você abre a caixa de diálogo Scripts:<screenshot> <screeninfo>caixa de diálogo Scripts</screeninfo> <mediaobject> <imageobject> <imagedata fileref="images/ScriptingDialog.png"/> </imageobject> </mediaobject> </screenshot></para>

    <para>A caixa de diálogo de scripts permite carregar um script existente na área de texto e executá-lo no projeto aberto atual. Para personalizar o recurso de scripts, faça o seguinte:</para>

    <itemizedlist>
      <listitem>
        <para>Na lista do painel esquerdo, clique no nome do script que deseja carregar no editor.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Clique com o botão direito em um botão de &quot;&lt;1&gt;&quot; a &quot;&lt;12&gt;&quot; no painel da base da tela e selecione &quot;Adicionar script&quot;. No exemplo acima, dois scripts (posição 1 e 2) já foram adicionados.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Ao clicar com o botão esquerdo no número correspondente, o script selecionado será executado. Você pode ativar as macros selecionadas no menu principal ou também usando as opções no menu <guisubmenu>Ferramentas </guisubmenu>ou pressioanando<keycap> Ctrl+Alt+F#</keycap> (F# = teclas F1 a F12).</para>
      </listitem>
    </itemizedlist>

    <para>As seguintes linguagens de script foram implementadas:</para>

    <para><itemizedlist>
        <listitem>
          <para><emphasis role="bold">NetRexx</emphasis> (http://www.netrexx.org/): suporta uma sintaxe REXX clássica, sem palavras-chave reservadas, junto com adições consideráveis para dar suporte a programação orientada ao objeto de maneira compatível com o modelo de objeto do Java. Todas as bibliotecas de classe Java existentes podem ser usadas sem alterações e sem configurações especiais; ao mesmo tempo, um programador Java pode optar por usar somente a classe Rexx do pacote de execução para melhorar o manejo de strings em programas fonte de sintaxe do Java.</para>
        </listitem>
      </itemizedlist><itemizedlist>
        <listitem>
          <para><emphasis role="bold">XLST</emphasis> (Extensible Stylesheet Language Transformations): é uma linguagem declarativa, baseada em XML e usada para a transformação de documentos em XML. O documento original não é modificado; ao invés disso, um novo documento é criado com base no conteúdo de um já existente. O novo documento pode ser serializado (saída) pelo processador em sintaxe de XML padrão ou em outro formato, como HTML ou texto simples. O XSLT é geralmente usado para converter dados entre esquemas de XML diferentes ou converter dados de XML em páginas da Web ou documentos PDF.</para>
        </listitem>
      </itemizedlist><itemizedlist>
        <listitem>
          <para><emphasis role="bold">Groovy</emphasis> (http://groovy.codehaus.org): é uma linguagem dinâmica da máquina virtual Java. Aproveita os pontos fortes do Java mas tem recursos adicionais poderosos inspirados por linguagens como Python, Ruby e Smalltalk.</para>
        </listitem>
      </itemizedlist><itemizedlist>
        <listitem>
          <para><emphasis role="bold">JavaScript</emphasis> (às vezes abreviado como JS, para não ser confundido com o Java): é uma linguagem de script baseada em protótipos, tipagem fraca e dinâmica e funções de primeira classe. É uma linguagem de multiparadigma, com suporte imperativo, a estilos de programação funcionais e orientada a objetos. Como é a linguagem por trás de programas conhecidos, como o Firefox, é uma ferramenta de programação popular no meio do código aberto.</para>
        </listitem>
      </itemizedlist>Todas as linguagens têm acesso ao modelo de objeto do OmegaT, com o projeto como o objeto principal. O seguinte fragmento de código em groovy, por exemplo, verifica todos os segmentos em todos os arquivos do projeto atual e, se a tradução existir, imprime a fonte e o alvo do segmento:</para>

    <programlisting>    files = project.projectFiles;
    for (i in 0 ..&lt; files.size())
    {
        for (j in 0 ..&lt; files[i].entries.size())
        {
            currSegment = files[i].entries[j];
            if (project.getTranslationInfo(currSegment))
            {
                source = currSegment.getSrcText();
                target = project.getTranslationInfo(currSegment).translation;
                console.println(source + &quot; &gt;&gt;&gt;&gt; &quot; + target);
            }     
        }
    }</programlisting>
  </section>
</appendix>