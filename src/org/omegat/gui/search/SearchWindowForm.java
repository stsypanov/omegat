/**************************************************************************
 OmegaT - Computer Assisted Translation (CAT) tool
          with fuzzy matching, translation memory, keyword search,
          glossaries, and translation leveraging into updated projects.

 Copyright (C) 2013 Alex Buloichik
               2014 Aaron Madlon-Kay, Piotr Kulik
               2015 Yu Tang
               Home page: http://www.omegat.org/
               Support center: http://groups.yahoo.com/group/OmegaT/

 This file is part of OmegaT.

 OmegaT is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 OmegaT is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.omegat.gui.search;

import org.omegat.gui.common.PeroFrame;
import org.omegat.util.OStrings;
import org.openide.awt.Mnemonics;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Alex Buloichik (alex73mail@gmail.com)
 * @author Aaron Madlon-Kay
 * @author Piotr Kulik
 */
public class SearchWindowForm extends PeroFrame {

    /**
     * Creates new form SearchWindowForm
     */
    public SearchWindowForm() {
        super();
        initComponents();
        m_viewer.setDragEnabled(true);
    }

    @Override
    public String getPreferenceBaseName() {
        return "search_window";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSearch = new ButtonGroup();
        buttonGroup2 = new ButtonGroup();
        buttonGroupReplace = new ButtonGroup();
        buttonGroupSearchState = new ButtonGroup();
        jPanel1 = new JPanel();
        m_searchLabel = new JLabel();
        m_searchField = new JComboBox();
        m_replaceLabel = new JLabel();
        m_replaceField = new JComboBox();
        m_searchButton = new JButton();
        m_panelSearch = new JPanel();
        jPanel2 = new JPanel();
        m_searchExactSearchRB = new JRadioButton();
        filler3 = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 10));
        m_searchKeywordSearchRB = new JRadioButton();
        filler4 = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 10));
        m_searchRegexpSearchRB = new JRadioButton();
        filler14 = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 10));
        m_resultsLabel = new JLabel();
        filler2 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(10, 0));
        jPanel3 = new JPanel();
        m_searchCase = new JCheckBox();
        filler29 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_searchSpaceMatchNbsp = new JCheckBox();
        filler5 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_searchSource = new JCheckBox();
        filler17 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_searchTranslation = new JCheckBox();
        filler6 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_searchNotesCB = new JCheckBox();
        filler24 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_searchCommentsCB = new JCheckBox();
        filler23 = new Box.Filler(new Dimension(5, 0), new Dimension(0, 0), new Dimension(10, 0));
        jPanel12 = new JPanel();
        m_searchTranslatedUntranslated = new JRadioButton();
        filler27 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_searchTranslated = new JRadioButton();
        filler28 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_searchUntranslated = new JRadioButton();
        filler8 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_displayLabel = new JLabel();
        m_allResultsCB = new JCheckBox();
        m_fileNamesCB = new JCheckBox();
        filler26 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(10, 0));
        m_panelReplace = new JPanel();
        jPanel5 = new JPanel();
        m_replaceExactSearchRB = new JRadioButton();
        filler19 = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 10));
        m_replaceRegexpSearchRB = new JRadioButton();
        filler20 = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 10));
        m_resultsLabel1 = new JLabel();
        filler21 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(10, 0));
        jPanel11 = new JPanel();
        m_replaceCase = new JCheckBox();
        filler22 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_replaceSpaceMatchNbsp = new JCheckBox();
        filler30 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_replaceUntranslated = new JCheckBox();
        filler11 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(10, 0));
        m_SearchInPane = new JPanel();
        jPanel13 = new JPanel();
        m_SearchInProjectPane = new JPanel();
        m_rbProject = new JRadioButton();
        m_cbSearchInMemory = new JCheckBox();
        m_cbSearchInTMs = new JCheckBox();
        m_cbSearchInGlossaries = new JCheckBox();
        jPanel9 = new JPanel();
        filler25 = new Box.Filler(new Dimension(15, 0), new Dimension(15, 0), new Dimension(15, 10));
        jSeparator1 = new JSeparator();
        filler9 = new Box.Filler(new Dimension(15, 0), new Dimension(15, 0), new Dimension(15, 10));
        m_SearchInDirPane = new JPanel();
        jPanel10 = new JPanel();
        m_rbDir = new JRadioButton();
        filler15 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(10, 0));
        m_recursiveCB = new JCheckBox();
        m_dirLabel = new JLabel();
        m_dirField = new JTextField();
        m_dirButton = new JButton();
        m_advancedVisiblePane = new JPanel();
        m_authorCB = new JCheckBox();
        m_authorField = new MFindField();
        m_authorField.setDefaultText(OStrings.getString("TF_CUR_SEGMENT_UNKNOWN_AUTHOR"));
        m_dateFromCB = new JCheckBox();
        m_dateFromButton = new JButton();
        m_dateToCB = new JCheckBox();
        m_dateToButton = new JButton();
        m_numberLabel = new JLabel();
        m_numberOfResults = new JSpinner();
        m_dateFromSpinner = new JSpinner();
        m_dateToSpinner = new JSpinner();
        jPanel6 = new JPanel();
        jPanel4 = new JPanel();
        m_advancedButton = new JButton();
        filler10 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(10, 0));
        jScrollPane1 = new JScrollPane();
        m_viewer = new EntryListPane();
        jPanel8 = new JPanel();
        filler13 = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 10));
        jPanel7 = new JPanel();
        m_autoSyncWithEditor = new JCheckBox();
        m_backToInitialSegment = new JCheckBox();
        filler12 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(10, 0));
        m_replaceAllButton = new JButton();
        filler18 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_replaceButton = new JButton();
        filler16 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_filterButton = new JButton();
        filler1 = new Box.Filler(new Dimension(5, 0), new Dimension(5, 0), new Dimension(5, 10));
        m_dismissButton = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new GridBagLayout());

        jPanel1.setLayout(new GridBagLayout());

        Mnemonics.setLocalizedText(m_searchLabel, OStrings.getString("SW_SEARCH_TEXT")); // NOI18N
        GridBagConstraints gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        jPanel1.add(m_searchLabel, gridBagConstraints);

        m_searchField.setEditable(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(0, 3, 0, 10);
        jPanel1.add(m_searchField, gridBagConstraints);

        Mnemonics.setLocalizedText(m_replaceLabel, OStrings.getString("SW_REPLACE_TEXT")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        jPanel1.add(m_replaceLabel, gridBagConstraints);

        m_replaceField.setEditable(true);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 3, 0, 10);
        jPanel1.add(m_replaceField, gridBagConstraints);

        Mnemonics.setLocalizedText(m_searchButton, OStrings.getString("BUTTON_SEARCH")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(m_searchButton, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(jPanel1, gridBagConstraints);

        m_panelSearch.setLayout(new GridLayout(3, 0));

        jPanel2.setLayout(new BoxLayout(jPanel2, BoxLayout.LINE_AXIS));

        buttonGroupSearch.add(m_searchExactSearchRB);
        m_searchExactSearchRB.setSelected(true);
        Mnemonics.setLocalizedText(m_searchExactSearchRB, OStrings.getString("SW_EXACT_SEARCH")); // NOI18N
        jPanel2.add(m_searchExactSearchRB);
        jPanel2.add(filler3);

        buttonGroupSearch.add(m_searchKeywordSearchRB);
        Mnemonics.setLocalizedText(m_searchKeywordSearchRB, OStrings.getString("SW_WORD_SEARCH")); // NOI18N
        jPanel2.add(m_searchKeywordSearchRB);
        jPanel2.add(filler4);

        buttonGroupSearch.add(m_searchRegexpSearchRB);
        Mnemonics.setLocalizedText(m_searchRegexpSearchRB, OStrings.getString("SW_REGEXP_SEARCH")); // NOI18N
        jPanel2.add(m_searchRegexpSearchRB);
        jPanel2.add(filler14);
        jPanel2.add(m_resultsLabel);
        jPanel2.add(filler2);

        m_panelSearch.add(jPanel2);

        jPanel3.setLayout(new BoxLayout(jPanel3, BoxLayout.LINE_AXIS));

        m_searchCase.setSelected(true);
        Mnemonics.setLocalizedText(m_searchCase, OStrings.getString("SW_CASE_SENSITIVE")); // NOI18N
        jPanel3.add(m_searchCase);
        jPanel3.add(filler29);

        Mnemonics.setLocalizedText(m_searchSpaceMatchNbsp, OStrings.getString("SW_SEARCH_SPACE_MATCH_NBSP")); // NOI18N
        jPanel3.add(m_searchSpaceMatchNbsp);
        jPanel3.add(filler5);

        m_searchSource.setSelected(true);
        Mnemonics.setLocalizedText(m_searchSource, OStrings.getString("SW_SEARCH_SOURCE")); // NOI18N
        jPanel3.add(m_searchSource);
        jPanel3.add(filler17);

        m_searchTranslation.setSelected(true);
        Mnemonics.setLocalizedText(m_searchTranslation, OStrings.getString("SW_SEARCH_TRANSLATION")); // NOI18N
        jPanel3.add(m_searchTranslation);
        jPanel3.add(filler6);

        m_searchNotesCB.setSelected(true);
        Mnemonics.setLocalizedText(m_searchNotesCB, OStrings.getString("SW_SEARCH_NOTES")); // NOI18N
        jPanel3.add(m_searchNotesCB);
        jPanel3.add(filler24);

        Mnemonics.setLocalizedText(m_searchCommentsCB, OStrings.getString("SW_SEARCH_COMMENTS")); // NOI18N
        jPanel3.add(m_searchCommentsCB);
        jPanel3.add(filler23);

        m_panelSearch.add(jPanel3);

        jPanel12.setLayout(new BoxLayout(jPanel12, BoxLayout.LINE_AXIS));

        buttonGroupSearchState.add(m_searchTranslatedUntranslated);
        m_searchTranslatedUntranslated.setSelected(true);
        Mnemonics.setLocalizedText(m_searchTranslatedUntranslated, OStrings.getString("SW_SEARCH_TRANSLATEDUNTRANSLATED")); // NOI18N
        jPanel12.add(m_searchTranslatedUntranslated);
        jPanel12.add(filler27);

        buttonGroupSearchState.add(m_searchTranslated);
        Mnemonics.setLocalizedText(m_searchTranslated, OStrings.getString("SW_SEARCH_TRANSLATED")); // NOI18N
        jPanel12.add(m_searchTranslated);
        jPanel12.add(filler28);

        buttonGroupSearchState.add(m_searchUntranslated);
        Mnemonics.setLocalizedText(m_searchUntranslated, OStrings.getString("SW_SEARCH_UNTRANSLATED")); // NOI18N
        jPanel12.add(m_searchUntranslated);
        jPanel12.add(filler8);

        m_displayLabel.setHorizontalAlignment(SwingConstants.RIGHT);
        Mnemonics.setLocalizedText(m_displayLabel, OStrings.getString("SW_DISPLAY_LABEL")); // NOI18N
        jPanel12.add(m_displayLabel);

        m_allResultsCB.setSelected(true);
        Mnemonics.setLocalizedText(m_allResultsCB, OStrings.getString("SW_ALL_RESULTS")); // NOI18N
        jPanel12.add(m_allResultsCB);

        Mnemonics.setLocalizedText(m_fileNamesCB, OStrings.getString("SW_FILE_NAMES")); // NOI18N
        jPanel12.add(m_fileNamesCB);
        jPanel12.add(filler26);

        m_panelSearch.add(jPanel12);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(m_panelSearch, gridBagConstraints);

        m_panelReplace.setLayout(new GridLayout(2, 0));

        jPanel5.setLayout(new BoxLayout(jPanel5, BoxLayout.LINE_AXIS));

        buttonGroupReplace.add(m_replaceExactSearchRB);
        m_replaceExactSearchRB.setSelected(true);
        Mnemonics.setLocalizedText(m_replaceExactSearchRB, OStrings.getString("SW_EXACT_SEARCH")); // NOI18N
        jPanel5.add(m_replaceExactSearchRB);
        jPanel5.add(filler19);

        buttonGroupReplace.add(m_replaceRegexpSearchRB);
        Mnemonics.setLocalizedText(m_replaceRegexpSearchRB, OStrings.getString("SW_REGEXP_SEARCH")); // NOI18N
        jPanel5.add(m_replaceRegexpSearchRB);
        jPanel5.add(filler20);
        jPanel5.add(m_resultsLabel1);
        jPanel5.add(filler21);

        m_panelReplace.add(jPanel5);

        jPanel11.setLayout(new BoxLayout(jPanel11, BoxLayout.LINE_AXIS));

        m_replaceCase.setSelected(true);
        Mnemonics.setLocalizedText(m_replaceCase, OStrings.getString("SW_CASE_SENSITIVE")); // NOI18N
        jPanel11.add(m_replaceCase);
        jPanel11.add(filler22);

        Mnemonics.setLocalizedText(m_replaceSpaceMatchNbsp, OStrings.getString("SW_SEARCH_SPACE_MATCH_NBSP")); // NOI18N
        jPanel11.add(m_replaceSpaceMatchNbsp);
        jPanel11.add(filler30);

        Mnemonics.setLocalizedText(m_replaceUntranslated, OStrings.getString("SW_REPLACE_UNTRANSLATED")); // NOI18N
        jPanel11.add(m_replaceUntranslated);
        jPanel11.add(filler11);

        m_panelReplace.add(jPanel11);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(m_panelReplace, gridBagConstraints);

        m_SearchInPane.setBorder(BorderFactory.createTitledBorder(OStrings.getString("SW_SEARCH_IN_BOX"))); // NOI18N
        m_SearchInPane.setLayout(new BorderLayout());

        jPanel13.setLayout(new BorderLayout());

        m_SearchInProjectPane.setLayout(new GridBagLayout());

        buttonGroup2.add(m_rbProject);
        Mnemonics.setLocalizedText(m_rbProject, OStrings.getString("SW_PROJECT_SEARCH")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        m_SearchInProjectPane.add(m_rbProject, gridBagConstraints);

        m_cbSearchInMemory.setSelected(true);
        Mnemonics.setLocalizedText(m_cbSearchInMemory, OStrings.getString("SW_SEARCH_IN_MEMORY")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        m_SearchInProjectPane.add(m_cbSearchInMemory, gridBagConstraints);

        m_cbSearchInTMs.setSelected(true);
        Mnemonics.setLocalizedText(m_cbSearchInTMs, OStrings.getString("SW_SEARCH_IN_TMS")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        m_SearchInProjectPane.add(m_cbSearchInTMs, gridBagConstraints);

        m_cbSearchInGlossaries.setSelected(true);
        Mnemonics.setLocalizedText(m_cbSearchInGlossaries, OStrings.getString("SW_SEARCH_IN_GLOSSARIES")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        m_SearchInProjectPane.add(m_cbSearchInGlossaries, gridBagConstraints);

        jPanel13.add(m_SearchInProjectPane, BorderLayout.WEST);

        jPanel9.setLayout(new BorderLayout());
        jPanel9.add(filler25, BorderLayout.WEST);

        jSeparator1.setOrientation(SwingConstants.VERTICAL);
        jPanel9.add(jSeparator1, BorderLayout.CENTER);
        jPanel9.add(filler9, BorderLayout.EAST);

        jPanel13.add(jPanel9, BorderLayout.EAST);

        m_SearchInPane.add(jPanel13, BorderLayout.WEST);

        m_SearchInDirPane.setLayout(new GridBagLayout());

        jPanel10.setOpaque(false);
        jPanel10.setLayout(new BoxLayout(jPanel10, BoxLayout.LINE_AXIS));

        buttonGroup2.add(m_rbDir);
        Mnemonics.setLocalizedText(m_rbDir, OStrings.getString("SW_DIR_SEARCH")); // NOI18N
        jPanel10.add(m_rbDir);
        jPanel10.add(filler15);

        m_recursiveCB.setSelected(true);
        Mnemonics.setLocalizedText(m_recursiveCB, OStrings.getString("SW_DIR_RECURSIVE")); // NOI18N
        m_recursiveCB.setEnabled(false);
        jPanel10.add(m_recursiveCB);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        m_SearchInDirPane.add(jPanel10, gridBagConstraints);

        Mnemonics.setLocalizedText(m_dirLabel, OStrings.getString("SW_LOCATION")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        m_SearchInDirPane.add(m_dirLabel, gridBagConstraints);

        m_dirField.setEditable(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        m_SearchInDirPane.add(m_dirField, gridBagConstraints);

        Mnemonics.setLocalizedText(m_dirButton, OStrings.getString("SW_BROWSE")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        m_SearchInDirPane.add(m_dirButton, gridBagConstraints);

        m_SearchInPane.add(m_SearchInDirPane, BorderLayout.CENTER);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        getContentPane().add(m_SearchInPane, gridBagConstraints);

        m_advancedVisiblePane.setLayout(new GridBagLayout());

        Mnemonics.setLocalizedText(m_authorCB, OStrings.getString("SW_AUTHOR")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        m_advancedVisiblePane.add(m_authorCB, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        m_advancedVisiblePane.add(m_authorField, gridBagConstraints);

        Mnemonics.setLocalizedText(m_dateFromCB, OStrings.getString("SW_CHANGED_AFTER")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        m_advancedVisiblePane.add(m_dateFromCB, gridBagConstraints);

        Mnemonics.setLocalizedText(m_dateFromButton, OStrings.getString("SW_NOW")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        m_advancedVisiblePane.add(m_dateFromButton, gridBagConstraints);

        Mnemonics.setLocalizedText(m_dateToCB, OStrings.getString("SW_CHANGED_BEFORE")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        m_advancedVisiblePane.add(m_dateToCB, gridBagConstraints);

        Mnemonics.setLocalizedText(m_dateToButton, OStrings.getString("SW_NOW")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        m_advancedVisiblePane.add(m_dateToButton, gridBagConstraints);

        Mnemonics.setLocalizedText(m_numberLabel, OStrings.getString("SW_NUMBER")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        m_advancedVisiblePane.add(m_numberLabel, gridBagConstraints);

        m_numberOfResults.setModel(new SpinnerNumberModel());
        m_numberOfResults.setMinimumSize(new Dimension(100, 28));
        m_numberOfResults.setPreferredSize(new Dimension(100, 28));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        m_advancedVisiblePane.add(m_numberOfResults, gridBagConstraints);

        m_dateFromSpinner.setModel(new SpinnerDateModel());
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        m_advancedVisiblePane.add(m_dateFromSpinner, gridBagConstraints);

        m_dateToSpinner.setModel(new SpinnerDateModel());
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        m_advancedVisiblePane.add(m_dateToSpinner, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        m_advancedVisiblePane.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(m_advancedVisiblePane, gridBagConstraints);

        jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.LINE_AXIS));

        Mnemonics.setLocalizedText(m_advancedButton, OStrings.getString("SW_ADVANCED_OPTIONS")); // NOI18N
        jPanel4.add(m_advancedButton);
        jPanel4.add(filler10);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(jPanel4, gridBagConstraints);

        m_viewer.setText(OStrings.getString("SW_VIEWER_TEXT")); // NOI18N
        jScrollPane1.setViewportView(m_viewer);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jPanel8.setLayout(new BoxLayout(jPanel8, BoxLayout.LINE_AXIS));
        jPanel8.add(filler13);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(jPanel8, gridBagConstraints);

        jPanel7.setLayout(new BoxLayout(jPanel7, BoxLayout.LINE_AXIS));

        Mnemonics.setLocalizedText(m_autoSyncWithEditor, OStrings.getString("SW_AUTO_SYNC")); // NOI18N
        m_autoSyncWithEditor.setFocusable(false);
        m_autoSyncWithEditor.setMinimumSize(new Dimension(105, 21));
        jPanel7.add(m_autoSyncWithEditor);

        Mnemonics.setLocalizedText(m_backToInitialSegment, OStrings.getString("SW_BACK_TO_INITIAL_SEGMENT")); // NOI18N
        m_backToInitialSegment.setFocusable(false);
        m_backToInitialSegment.setMinimumSize(new Dimension(105, 21));
        jPanel7.add(m_backToInitialSegment);
        jPanel7.add(filler12);

        Mnemonics.setLocalizedText(m_replaceAllButton, OStrings.getString("BUTTON_REPLACE_ALL")); // NOI18N
        m_replaceAllButton.setEnabled(false);
        jPanel7.add(m_replaceAllButton);
        jPanel7.add(filler18);

        Mnemonics.setLocalizedText(m_replaceButton, OStrings.getString("BUTTON_REPLACE")); // NOI18N
        m_replaceButton.setEnabled(false);
        jPanel7.add(m_replaceButton);
        jPanel7.add(filler16);

        Mnemonics.setLocalizedText(m_filterButton, OStrings.getString("BUTTON_FILTER")); // NOI18N
        m_filterButton.setEnabled(false);
        jPanel7.add(m_filterButton);
        jPanel7.add(filler1);

        Mnemonics.setLocalizedText(m_dismissButton, OStrings.getString("BUTTON_CLOSE")); // NOI18N
        jPanel7.add(m_dismissButton);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(3, 3, 3, 3);
        getContentPane().add(jPanel7, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /**
         * Create and display the form
         */
        EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SearchWindowForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    ButtonGroup buttonGroup2;
    ButtonGroup buttonGroupReplace;
    ButtonGroup buttonGroupSearch;
    ButtonGroup buttonGroupSearchState;
    Box.Filler filler1;
    Box.Filler filler10;
    Box.Filler filler11;
    Box.Filler filler12;
    Box.Filler filler13;
    Box.Filler filler14;
    Box.Filler filler15;
    Box.Filler filler16;
    Box.Filler filler17;
    Box.Filler filler18;
    Box.Filler filler19;
    Box.Filler filler2;
    Box.Filler filler20;
    Box.Filler filler21;
    Box.Filler filler22;
    Box.Filler filler23;
    Box.Filler filler24;
    Box.Filler filler25;
    Box.Filler filler26;
    Box.Filler filler27;
    Box.Filler filler28;
    Box.Filler filler29;
    Box.Filler filler3;
    Box.Filler filler30;
    Box.Filler filler4;
    Box.Filler filler5;
    Box.Filler filler6;
    Box.Filler filler8;
    Box.Filler filler9;
    JPanel jPanel1;
    JPanel jPanel10;
    JPanel jPanel11;
    JPanel jPanel12;
    JPanel jPanel13;
    JPanel jPanel2;
    JPanel jPanel3;
    JPanel jPanel4;
    JPanel jPanel5;
    JPanel jPanel6;
    JPanel jPanel7;
    JPanel jPanel8;
    JPanel jPanel9;
    JScrollPane jScrollPane1;
    JSeparator jSeparator1;
    JPanel m_SearchInDirPane;
    JPanel m_SearchInPane;
    JPanel m_SearchInProjectPane;
    JButton m_advancedButton;
    JPanel m_advancedVisiblePane;
    JCheckBox m_allResultsCB;
    JCheckBox m_authorCB;
    MFindField m_authorField;
    JCheckBox m_autoSyncWithEditor;
    JCheckBox m_backToInitialSegment;
    JCheckBox m_cbSearchInGlossaries;
    JCheckBox m_cbSearchInMemory;
    JCheckBox m_cbSearchInTMs;
    JButton m_dateFromButton;
    JCheckBox m_dateFromCB;
    JSpinner m_dateFromSpinner;
    JButton m_dateToButton;
    JCheckBox m_dateToCB;
    JSpinner m_dateToSpinner;
    JButton m_dirButton;
    JTextField m_dirField;
    JLabel m_dirLabel;
    JButton m_dismissButton;
    JLabel m_displayLabel;
    JCheckBox m_fileNamesCB;
    JButton m_filterButton;
    JLabel m_numberLabel;
    JSpinner m_numberOfResults;
    JPanel m_panelReplace;
    JPanel m_panelSearch;
    JRadioButton m_rbDir;
    JRadioButton m_rbProject;
    JCheckBox m_recursiveCB;
    JButton m_replaceAllButton;
    JButton m_replaceButton;
    JCheckBox m_replaceCase;
    JRadioButton m_replaceExactSearchRB;
    JComboBox<String> m_replaceField;
    JLabel m_replaceLabel;
    JRadioButton m_replaceRegexpSearchRB;
    JCheckBox m_replaceSpaceMatchNbsp;
    JCheckBox m_replaceUntranslated;
    JLabel m_resultsLabel;
    JLabel m_resultsLabel1;
    JButton m_searchButton;
    JCheckBox m_searchCase;
    JCheckBox m_searchCommentsCB;
    JRadioButton m_searchExactSearchRB;
    JComboBox<String> m_searchField;
    JRadioButton m_searchKeywordSearchRB;
    JLabel m_searchLabel;
    JCheckBox m_searchNotesCB;
    JRadioButton m_searchRegexpSearchRB;
    JCheckBox m_searchSource;
    JCheckBox m_searchSpaceMatchNbsp;
    JRadioButton m_searchTranslated;
    JRadioButton m_searchTranslatedUntranslated;
    JCheckBox m_searchTranslation;
    JRadioButton m_searchUntranslated;
    JTextPane m_viewer;
    // End of variables declaration//GEN-END:variables
}
